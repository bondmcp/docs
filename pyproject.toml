[build-system]
requires = ["hatchling>=1.8.0"]
build-backend = "hatchling.build"

[project]
name = "bondmcp"
version = "1.0.1"
description = "BondMCP - The Trusted Protocol for Health AI. Python SDK and CLI for seamless integration with BondMCP's multi-model consensus health AI platform."
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
authors = [
    {name = "BondMCP Team", email = "hello@bondmcp.com"},
]
maintainers = [
    {name = "BondMCP Team", email = "hello@bondmcp.com"},
]
keywords = [
    "health", "ai", "medical", "healthcare", "api", "sdk", "cli",
    "consensus", "multi-model", "hipaa", "trusted", "protocol"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
dependencies = [
    "requests>=2.25.0",
    "typing-extensions>=4.0.0; python_version<'3.10'",
]

[project.optional-dependencies]
cli = [
    "click>=8.0.0",
    "rich>=13.0.0",
    "keyring>=23.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
all = [
    "bondmcp[cli,dev,docs]",
]

[project.urls]
Homepage = "https://bondmcp.com"
Documentation = "https://docs.bondmcp.com"
Repository = "https://github.com/bondmcp/mcp"
"Bug Tracker" = "https://github.com/bondmcp/mcp/issues"
"API Documentation" = "https://api.bondmcp.com/docs"
"Health Chat" = "https://bondmcp.com/health-chat"

[project.scripts]
bondmcp-cli = "bondmcp_cli.cli:cli"
bondmcp = "bondmcp_cli.cli:cli"

[tool.hatch.build.targets.wheel]
packages = ["bondmcp_sdk", "bondmcp_cli"]

[tool.hatch.build.targets.sdist]
include = [
    "/bondmcp_sdk",
    "/bondmcp_cli",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
]

[tool.hatch.version]
path = "bondmcp_sdk/__init__.py"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["bondmcp_sdk", "bondmcp_cli"]

[tool.mypy]
python_version = "1.0.1"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "1.0.1"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["bondmcp_sdk", "bondmcp_cli"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

