{
  "openapi": "3.0.2",
  "info": {
    "title": "BondMCP API",
    "version": "0.1.0"
  },
  "paths": {
    "/ask": {
      "post": {
        "tags": ["Client"],
        "summary": "Query LLM",
        "description": "Placeholder handler returning an echo of the query.",
        "operationId": "ask_endpoint_ask_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AskRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/import/oura": {
      "post": {
        "tags": ["Client"],
        "summary": "Import Oura data",
        "description": "Placeholder for Oura import integration.",
        "operationId": "import_oura_endpoint_import_oura_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OuraImportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuraImportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/insights/{insight_type}": {
      "post": {
        "tags": ["Client"],
        "summary": "Generate health insights by type",
        "description": "Placeholder returning a not implemented message for a specific type.",
        "operationId": "insights_type_endpoint_insights__insight_type__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Insight Type",
              "type": "string"
            },
            "name": "insight_type",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsightsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsightsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/insights": {
      "post": {
        "tags": ["Client"],
        "summary": "Generate general health insights",
        "description": "Generic insights endpoint.",
        "operationId": "insights_endpoint_insights_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsightsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsightsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api-keys": {
      "get": {
        "tags": ["API Keys"],
        "summary": "List Api Keys",
        "description": "Lists all API keys for the authenticated user.",
        "operationId": "list_api_keys_api_keys_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response List Api Keys Api Keys Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyDisplay"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": ["API Keys"],
        "summary": "Create Api Key",
        "description": "Creates a new API key for the authenticated user.\nThe full API key is only returned once upon creation.",
        "operationId": "create_api_key_api_keys_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api-keys/{key_id}": {
      "put": {
        "tags": ["API Keys"],
        "summary": "Update Api Key",
        "description": "Updates an API key (e.g., its name) for the authenticated user.",
        "operationId": "update_api_key_api_keys__key_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Key Id",
              "type": "string"
            },
            "name": "key_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDisplay"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          },
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["API Keys"],
        "summary": "Revoke Api Key",
        "description": "Revokes (deactivates) an API key for the authenticated user.",
        "operationId": "revoke_api_key_api_keys__key_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Key Id",
              "type": "string"
            },
            "name": "key_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDisplay"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          },
          {
            "Bearer": []
          }
        ]
      }
    },
    "/labs/interpret": {
      "post": {
        "tags": ["Labs"],
        "summary": "Interpret Labs",
        "description": "Placeholder labs interpretation endpoint.",
        "operationId": "interpret_labs_labs_interpret_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LabsInterpretRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabsInterpretResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/supplement/recommend": {
      "post": {
        "tags": ["Supplements"],
        "summary": "Recommend Supplements",
        "description": "Return basic supplement recommendations with brand data.",
        "operationId": "recommend_supplements_supplement_recommend_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplementRecommendRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplementRecommendResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/conversation/{conversation_id}/health-data": {
      "post": {
        "tags": ["Health Data"],
        "summary": "Upload Health Data",
        "description": "Store provided health data for the given conversation.",
        "operationId": "upload_health_data_v1_chat_conversation__conversation_id__health_data_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Conversation Id",
              "type": "string"
            },
            "name": "conversation_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HealthDataPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/payments/create-intent": {
      "post": {
        "tags": ["Payments"],
        "summary": "Create Payment Intent",
        "operationId": "create_payment_intent_payments_create_intent_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Amount",
              "type": "integer"
            },
            "name": "amount",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Currency",
              "type": "string",
              "default": "usd"
            },
            "name": "currency",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/orchestrate": {
      "post": {
        "tags": ["MCP"],
        "summary": "Orchestrate Tools",
        "operationId": "orchestrate_tools_orchestrate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Invocations",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ToolInvocation"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Orchestrate Tools Orchestrate Post",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrchestrationResult"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "tags": ["Health"],
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/tools/call": {
      "post": {
        "summary": "Call Tool",
        "operationId": "call_tool_tools_call_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolCallRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiKeyCreate": {
        "title": "ApiKeyCreate",
        "required": ["key_name"],
        "type": "object",
        "properties": {
          "key_name": {
            "title": "Key Name",
            "type": "string",
            "example": "My Test Key"
          }
        }
      },
      "ApiKeyCreateResponse": {
        "title": "ApiKeyCreateResponse",
        "required": [
          "key_name",
          "user_id",
          "key_id",
          "key_prefix",
          "created_at",
          "is_active",
          "full_key"
        ],
        "type": "object",
        "properties": {
          "key_name": {
            "title": "Key Name",
            "type": "string",
            "example": "My Test Key"
          },
          "user_id": {
            "title": "User Id",
            "type": "string"
          },
          "key_id": {
            "title": "Key Id",
            "type": "string"
          },
          "key_prefix": {
            "title": "Key Prefix",
            "type": "string"
          },
          "created_at": {
            "title": "Created At",
            "type": "string"
          },
          "last_used_at": {
            "title": "Last Used At",
            "type": "string"
          },
          "request_count": {
            "title": "Request Count",
            "type": "integer",
            "default": 0
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean"
          },
          "full_key": {
            "title": "Full Key",
            "type": "string",
            "example": "bmcp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
          }
        }
      },
      "ApiKeyDisplay": {
        "title": "ApiKeyDisplay",
        "required": ["key_name", "user_id", "key_id", "key_prefix", "created_at", "is_active"],
        "type": "object",
        "properties": {
          "key_name": {
            "title": "Key Name",
            "type": "string",
            "example": "My Test Key"
          },
          "user_id": {
            "title": "User Id",
            "type": "string"
          },
          "key_id": {
            "title": "Key Id",
            "type": "string"
          },
          "key_prefix": {
            "title": "Key Prefix",
            "type": "string"
          },
          "created_at": {
            "title": "Created At",
            "type": "string"
          },
          "last_used_at": {
            "title": "Last Used At",
            "type": "string"
          },
          "request_count": {
            "title": "Request Count",
            "type": "integer",
            "default": 0
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean"
          }
        }
      },
      "ApiKeyUpdate": {
        "title": "ApiKeyUpdate",
        "type": "object",
        "properties": {
          "key_name": {
            "title": "Key Name",
            "type": "string"
          }
        }
      },
      "AskRequest": {
        "title": "AskRequest",
        "required": ["query"],
        "type": "object",
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          }
        }
      },
      "AskResponse": {
        "title": "AskResponse",
        "required": ["response"],
        "type": "object",
        "properties": {
          "response": {
            "title": "Response",
            "type": "string"
          }
        }
      },
      "BondMCPErrorData": {
        "title": "BondMCPErrorData",
        "required": ["code", "message"],
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "integer"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "details": {
            "title": "Details"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "HealthDataPayload": {
        "title": "HealthDataPayload",
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "object"
          }
        },
        "description": "Payload for uploading health data."
      },
      "HealthDataResponse": {
        "title": "HealthDataResponse",
        "required": ["status"],
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string"
          }
        }
      },
      "InsightsRequest": {
        "title": "InsightsRequest",
        "type": "object",
        "properties": {
          "payload": {
            "title": "Payload",
            "type": "object"
          }
        }
      },
      "InsightsResponse": {
        "title": "InsightsResponse",
        "required": ["insight"],
        "type": "object",
        "properties": {
          "insight": {
            "title": "Insight",
            "type": "string"
          }
        }
      },
      "LabResultItem": {
        "title": "LabResultItem",
        "required": ["marker_name", "value", "unit"],
        "type": "object",
        "properties": {
          "marker_name": {
            "title": "Marker Name",
            "type": "string"
          },
          "value": {
            "title": "Value",
            "type": "number"
          },
          "unit": {
            "title": "Unit",
            "type": "string"
          },
          "reference_range_low": {
            "title": "Reference Range Low",
            "type": "number"
          },
          "reference_range_high": {
            "title": "Reference Range High",
            "type": "number"
          }
        }
      },
      "LabsInterpretRequest": {
        "title": "LabsInterpretRequest",
        "required": ["lab_results"],
        "type": "object",
        "properties": {
          "lab_results": {
            "title": "Lab Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabResultItem"
            }
          },
          "patient_context": {
            "title": "Patient Context",
            "type": "object"
          }
        }
      },
      "LabsInterpretResponse": {
        "title": "LabsInterpretResponse",
        "required": [
          "interpretation_summary",
          "detailed_marker_analysis",
          "potential_risks",
          "follow_up_suggestions"
        ],
        "type": "object",
        "properties": {
          "interpretation_summary": {
            "title": "Interpretation Summary",
            "type": "string"
          },
          "detailed_marker_analysis": {
            "title": "Detailed Marker Analysis",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "potential_risks": {
            "title": "Potential Risks",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "follow_up_suggestions": {
            "title": "Follow Up Suggestions",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OrchestrationResult": {
        "title": "OrchestrationResult",
        "type": "object",
        "properties": {
          "result": {
            "title": "Result"
          },
          "error": {
            "$ref": "#/components/schemas/BondMCPErrorData"
          }
        }
      },
      "OuraImportRequest": {
        "title": "OuraImportRequest",
        "type": "object",
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          },
          "data": {
            "title": "Data",
            "type": "object"
          }
        }
      },
      "OuraImportResponse": {
        "title": "OuraImportResponse",
        "required": ["status"],
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string"
          }
        }
      },
      "SupplementRecommendRequest": {
        "title": "SupplementRecommendRequest",
        "required": ["health_goals"],
        "type": "object",
        "properties": {
          "health_goals": {
            "title": "Health Goals",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "current_labs": {
            "title": "Current Labs",
            "type": "object"
          },
          "current_supplements": {
            "title": "Current Supplements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dietary_restrictions": {
            "title": "Dietary Restrictions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "patient_context": {
            "title": "Patient Context",
            "type": "object"
          }
        }
      },
      "SupplementRecommendResponse": {
        "title": "SupplementRecommendResponse",
        "required": ["recommendations"],
        "type": "object",
        "properties": {
          "recommendations": {
            "title": "Recommendations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplementRecommendation"
            }
          },
          "warnings": {
            "title": "Warnings",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        }
      },
      "SupplementRecommendation": {
        "title": "SupplementRecommendation",
        "required": ["supplement_name", "dosage", "reasoning"],
        "type": "object",
        "properties": {
          "supplement_name": {
            "title": "Supplement Name",
            "type": "string"
          },
          "brand_name": {
            "title": "Brand Name",
            "type": "string"
          },
          "dosage": {
            "title": "Dosage",
            "type": "string"
          },
          "reasoning": {
            "title": "Reasoning",
            "type": "string"
          },
          "potential_interactions": {
            "title": "Potential Interactions",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ToolCallRequest": {
        "title": "ToolCallRequest",
        "required": ["tool_name", "arguments"],
        "type": "object",
        "properties": {
          "tool_name": {
            "title": "Tool Name",
            "type": "string"
          },
          "arguments": {
            "title": "Arguments",
            "type": "object"
          }
        }
      },
      "ToolCallResponse": {
        "title": "ToolCallResponse",
        "type": "object",
        "properties": {
          "result": {
            "title": "Result"
          },
          "error": {
            "title": "Error"
          }
        }
      },
      "ToolInvocation": {
        "title": "ToolInvocation",
        "required": ["tool_name", "arguments"],
        "type": "object",
        "properties": {
          "tool_name": {
            "title": "Tool Name",
            "type": "string"
          },
          "arguments": {
            "title": "Arguments",
            "type": "object"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "JWTBearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "Bearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}
