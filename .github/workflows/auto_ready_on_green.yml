name: Auto Ready on Green

on:
  workflow_run:
    workflows: ["Contract Ingest & SDK Pipeline"]
    types: [completed]

jobs:
  auto-ready:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      pull-requests: write
      contents: read
    
    steps:
      - name: Find and update draft PRs
        uses: actions/github-script@v7
        with:
          script: |
            console.log('Contract Ingest & SDK Pipeline completed successfully, checking for draft PRs...');
            
            // Get all open pull requests
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            
            console.log(`Found ${pullRequests.length} open pull requests`);
            
            // Filter for draft PRs that match our criteria
            const targetPRs = pullRequests.filter(pr => {
              const isDraft = pr.draft;
              const titleContainsContract = pr.title.toLowerCase().includes('feat(contract-ingest)');
              const hasContractLabel = pr.labels.some(label => label.name === 'contract');
              const hasWIPInTitle = pr.title.includes('[WIP]');
              
              return isDraft && (titleContainsContract || hasContractLabel);
            });
            
            console.log(`Found ${targetPRs.length} draft PRs matching contract criteria`);
            
            for (const pr of targetPRs) {
              console.log(`Processing PR #${pr.number}: "${pr.title}"`);
              
              try {
                // Convert from draft to ready for review
                await github.rest.pulls.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr.number,
                  draft: false
                });
                
                console.log(`‚úÖ Converted PR #${pr.number} from draft to ready for review`);
                
                // Remove [WIP] prefix from title if present
                let newTitle = pr.title;
                if (newTitle.includes('[WIP]')) {
                  newTitle = newTitle.replace(/\[WIP\]\s*/gi, '').trim();
                  
                  await github.rest.pulls.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: pr.number,
                    title: newTitle
                  });
                  
                  console.log(`‚úÖ Removed [WIP] prefix from PR #${pr.number} title`);
                }
                
                // Add 'ready-for-review' label
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  labels: ['ready-for-review']
                });
                
                console.log(`‚úÖ Added 'ready-for-review' label to PR #${pr.number}`);
                
                // Add a comment to notify about the auto-conversion
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: `üöÄ **Auto-Ready Conversion**\n\nThis PR has been automatically converted from draft to "Ready for Review" because the **Contract Ingest & SDK Pipeline** completed successfully.\n\n‚úÖ Contract ingestion and SDK generation completed\n‚úÖ PR is now ready for review\n‚úÖ Added \`ready-for-review\` label\n${newTitle !== pr.title ? '‚úÖ Removed [WIP] prefix from title\n' : ''}\nPlease ensure all items in the readiness checklist are completed before merging.`
                });
                
                console.log(`‚úÖ Added notification comment to PR #${pr.number}`);
                
              } catch (error) {
                console.error(`‚ùå Failed to process PR #${pr.number}:`, error.message);
              }
            }
            
            if (targetPRs.length === 0) {
              console.log('No draft PRs found matching contract criteria');
            } else {
              console.log(`‚úÖ Successfully processed ${targetPRs.length} PR(s)`);
            }